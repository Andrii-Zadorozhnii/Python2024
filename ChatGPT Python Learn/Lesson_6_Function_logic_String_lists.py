# 1. Логические операторы и операторы сравнения

# Логические операторы (and, or, not) позволяют строить условия, проверяя сразу несколько условий.

a = 10
b = 5

# Пример использования операторов
print(a > b and b > 0)  # True, оба условия верны
print(a > b or b < 0)   # True, одно из условий верно
print(not a > b)        # False, так как a > b верно, а not меняет на False

# 2. Функции с более сложными условиями

# Теперь создадим функцию, которая проверяет, является ли число в заданном диапазоне. Например, определим, входит ли число в диапазон от 1 до 10:

def is_in_range(number, start, end):
    return start <= number <= end

# Пример
print(is_in_range(5, 1, 10))  # True
print(is_in_range(15, 1, 10))  # False

# 3. Работа со строками

# Строки можно разделить на отдельные слова, сделать заглавными или заменить часть текста.
#
# Примеры:

text = "hello world"
print(text.upper())       # HELLO WORLD
print(text.replace("hello", "hi"))  # hi world

# Разделение на слова
words = text.split()  # ['hello', 'world']
print(words)

# Домашнее задание
# Функция is_in_range: Проверьте, входит ли число в диапазон от number1 до number2 (где number1 и number2 — введенные пользователем числа). Верните True или False.
#
# Работа с текстом:
#
# Напишите функцию text_process, которая принимает текст и:
# Переводит его в верхний регистр.
# Заменяет все вхождения слова "Python" на "Java".
# Возвращает обработанный текст.


def is_in_range2(search_number, start_number1, end_number2)
    return